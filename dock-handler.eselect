# -*-eselect-*-  vim: ft=eselect
# Copyright 2019 Gavin_Darkglider
# Distributed under the terms of the GNU GPL version 2 or later

DESCRIPTION="Manage How the Nintendo Switch Dock Is Handled."
MAINTAINER="gavin_darkglider"
VERSION="1"

# Give options, preset
find_targets() {
    local f
    for f in "${EROOT}"/usr/share/dock-handler/DH-[[:digit:]]*; do
        [[ -f ${f} ]] && basename "${f}"
    done
}

# remove the Dock Handler symlink
remove_symlink() {
    rm "${EROOT}/usr/bin/dock-hotplug"
}

# set the kernel symlink
set_symlink() {
    local target=$1

    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    [[ -z ${target} || ! -f ${EROOT}/usr/share/dock-handler/${target} ]] \
        && die -q "Target \"$1\" doesn't appear to be valid!"

    ln -s "${EROOT}/usr/share/dock-handler/${target}" "${EROOT}/usr/bin/dock-hotplug"
}

### show action ###

describe_show() {
    echo "Show the Current Dock Handler Mode"
}

do_show() {
    write_list_start "Current Dock Handler Mode:"
    if [[ -L ${EROOT}/usr/bin/dock-hotplug ]]; then
        local dock_handler=$(canonicalise "${EROOT}/usr/bin/dock-hotplug")
        write_kv_list_entry "${dock_handler%/}" ""
    else
        write_kv_list_entry "(unset)" ""
    fi
}

### list action ###

describe_list() {
    echo "List available Dock Handler Options"
}

do_list() {
    local i targets=( $(find_targets) )

    write_list_start "Dock Handler Options"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        # highlight the target where the symlink is pointing to
        [[ ${targets[i]} = \
            $(basename "$(canonicalise "${EROOT}/usr/bin/dock-hotplug")") ]] \
            && targets[i]=$(highlight_marker "${targets[i]}")
    done
    write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action ###

describe_set() {
    echo "Set a new Dock Handler Preference"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
    [[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
    [[ $# -gt 1 ]] && die -q "Too many parameters"

    if [[ -L ${EROOT}/usr/bin/dock-hotplug ]]; then
        # existing symlink
        remove_symlink || die -q "Couldn't remove existing symlink"
        set_symlink "$1" || die -q "Couldn't set a new symlink"
    elif [[ -e ${EROOT}/usr/bin/dock-hotplug ]]; then
        # we have something strange
        die -q "${EROOT}/usr/bin/dock-hotplug exists but is not a symlink"
    else
        set_symlink "$1" || die -q "Couldn't set a new symlink"
    fi
}
